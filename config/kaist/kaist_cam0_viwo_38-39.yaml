%YAML:1.0

imu: 1
num_of_cam: 1
wheels: 1

cam0_calib: "cam0_pinhole_38-39.yaml"
image_width: 1280
image_height: 560
   
estimate_extrinsic: 0   
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -0.00680499   ,-0.0153215,      0.99985,      1.71239,
           -0.999977,  0.000334627,  -0.00680066,     0.247401,
           -0.000230383,    -0.999883,   -0.0153234,     -0.11589,
           0,            0,            0,            1]

body_T_vel: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [1.0 , 0.0 , 0.0 ,0.07,  
          0.0 , 1.0 , 0.0, 0.0,
          0.0 , 0.0 , 1.0 ,-1.7,
          0,0,0,1]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)关键帧阈值
max_ang_vel: 500.0 #角速度阈值  角速度阈值2.0,vel= vel*0.8时z轴漂移小
max_cnt_1: 0  #特征点误差小于1的阈值
max_angvel_bias: 0  #优化bias时的角速度阈值

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2          # accelerometer measurement noise standard deviation.
gyr_n: 0.01         # gyroscope measurement noise standard deviation.
acc_w: 0.001        # accelerometer bias random work noise standard deviation.
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude
enc_n: 0.2       # encoder readings noise standard deviation.

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/hongfeng/sd-vins-wheel-ws/sd_vins_wheel/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
